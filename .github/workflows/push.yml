on: push
name: Node Build, Package & Publish
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      #- name: npm install and npm run build
       # run: |
        #  npm i
         # npm run build
           
     - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ 'ne-innovation' }}
        SONAR_TOKEN: ${{ 'NE-INNOVATION_prefill-svc-api' }}
      
      - name: Get the version
        id: vars
        run:  |
          echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo ::set-output name=repo::$(echo ${GITHUB_REPOSITORY})
      - name: use vars
        run: |
          echo "Branch: ${{ steps.vars.outputs.branch }}"
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"
          echo "Sha: ${{ steps.vars.outputs.repo }}"
       
      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        with:
          username: afu174
          ## Password or personal access token used to log in to a Docker registry. If not set then no login will occur
          password: ${{ secrets.GITHUB_TOKEN }}
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: docker.pkg.github.com
          # Docker repository to tag the image with
          repository: ne-innovation/lrqi-ui/${{ steps.vars.outputs.branch }}
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: ${{ steps.vars.outputs.sha_short }}
          tag_with_ref: false
          tag_with_sha: false
          # Path to the build context
          path: .
         # # Path to the Dockerfile (Default is '{path}/Dockerfile')
          dockerfile: ./Dockerfile
          # Whether to push the image
          push: true
      - name: Openshift Command
        uses: redhat-developer/openshift-actions@v1.1
        with:
          version: 'latest'
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          parameters: '{"apitoken": "${{ secrets.API_TOKEN }}", "acceptUntrustedCerts": "true"}'
          cmd: |          
            'version'
            'project development'
            'new-app https://github.com/${{ steps.vars.outputs.repo }}#deploy'
            'status'
